{:components
 {:app #var duct.component.handler/handler-component
  :db #var duct.component.hikaricp/hikaricp
  :emailer #var akvo.lumen.component.emailer/mailjet-emailer
  :http #var akvo.lumen.component.http/http
  :keycloak #var akvo.lumen.component.keycloak/keycloak
  :tenant-manager #var akvo.lumen.component.tenant-manager/tenant-manager}
 :endpoints
 {:aggregation #var akvo.lumen.endpoint.aggregation/endpoint
  :collection #var akvo.lumen.endpoint.collection/endpoint
  :dashboard #var akvo.lumen.endpoint.dashboard/endpoint
  :dataset #var akvo.lumen.endpoint.dataset/endpoint
  :env #var akvo.lumen.endpoint.env/endpoint
  :files #var akvo.lumen.endpoint.files/endpoint
  :invite #var akvo.lumen.endpoint.invite/endpoint
  :invite-verify #var akvo.lumen.endpoint.invite/verify-endpoint
  :job-execution #var akvo.lumen.endpoint.job-execution/endpoint
  :library #var akvo.lumen.endpoint.library/endpoint
  :public #var akvo.lumen.endpoint.public/endpoint
  :root #var akvo.lumen.endpoint.root/endpoint
  :share #var akvo.lumen.endpoint.share/endpoint
  :transformation #var akvo.lumen.endpoint.transformation/endpoint
  :user #var akvo.lumen.endpoint.user/endpoint
  :visualisation #var akvo.lumen.endpoint.visualisation/endpoint}
 :dependencies
 {:http [:app]
  :app [:aggregation :collection :dashboard :dataset :env :emailer :files :invite
        :invite-verify :job-execution :library :public :root :share :transformation
        :user :visualisation]
  :tenant-manager [:db]
  :aggregation [:tenant-manager]
  :collection [:tenant-manager]
  :dashboard [:tenant-manager]
  :dataset [:tenant-manager :config]
  :env [:config]
  :files [:config]
  :invite [:tenant-manager :keycloak :emailer :config]
  :invite-verify [:keycloak :tenant-manager :config]
  :job-execution [:tenant-manager]
  :library [:tenant-manager]
  :public [:tenant-manager]
  :root [:tenant-manager]
  :share [:tenant-manager :config]
  :transformation [:tenant-manager]
  :user [:keycloak]
  :visualisation [:tenant-manager]}
 :config
 {:app
  {:migrations {:tenant-manager "akvo/lumen/migrations/tenant_manager"
                :tenants "akvo/lumen/migrations/tenants"}
   :middleware
   {:functions
    {:hide-errors #var duct.middleware.errors/wrap-hide-errors
     :json-body #var ring.middleware.json/wrap-json-body
     :json-response #var ring.middleware.json/wrap-json-response
     :not-found #var duct.middleware.not-found/wrap-not-found
     :ring-defaults #var ring.middleware.defaults/wrap-defaults
     :wrap-auth #var akvo.lumen.auth/wrap-auth
     :wrap-jwt #var akvo.lumen.auth/wrap-jwt
     :wrap-label-tenant #var akvo.lumen.component.tenant-manager/wrap-label-tenant
     :wrap-sentry #var raven-clj.ring/wrap-sentry}
    :applied
    [:not-found :json-response :ring-defaults :json-body
     :wrap-auth :wrap-jwt :wrap-label-tenant :wrap-sentry :hide-errors]
    :arguments
    {:not-found "Resource Not Found"
     :hide-errors "Internal Server Error"
     :wrap-jwt {:keycloak-url keycloak-url
                :keycloak-realm keycloak-realm}
     :ring-defaults
     {:params {:urlencoded true
               :keywordize true}
      :responses {:not-modified-responses true
                  :absolute-redirects true
                  :content-types true
                  :default-charset "utf-8"}}
     :wrap-sentry sentry-backend-dsn}}}
  :http
  {:port http-port}
  :db
  {:uri db-uri}
  :emailer
  {:email-host email-host
   :email-password email-password
   :email-user email-user
   :from-email "noreply@akvo.org"
   :from-name "Akvo Lumen"}
  :config
  {:file-upload-path file-upload-path
   :keycloak-url keycloak-url
   :keycloak-realm keycloak-realm
   :keycloak-public-client-id keycloak-public-client-id
   :sentry-client-dsn sentry-client-dsn
   :flow-api-url flow-api-url}
  :keycloak
  {:url keycloak-url
   :realm keycloak-realm
   :credentials {"client_id" keycloak-client-id
                 "client_secret" keycloak-client-secret}}}}
